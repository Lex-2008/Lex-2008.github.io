{
  "version": 3,
  "sources": ["src/saveableType.ts", "src/cargo.ts", "src/components.ts", "src/utils.ts", "src/ship.ts", "src/draw.ts", "src/walker.ts", "src/walkManager.ts", "src/index.ts"],
  "sourcesContent": ["export abstract class SaveableObject {\n    static id: string\n\n    get mytype() { return this.constructor as typeof SaveableObject }\n    get typename(): string { return this.mytype.id }\n\n    toJSON() {\n        return { 'type': this.typename }\n    }\n    static fromJSON(type: typeof SaveableObject, data: object) {\n        // same as `return new type()`\n        return new (type as unknown as new () => SaveableObject)()\n    }\n}\n\nexport function fromJSON(data: { 'type': string }) {\n    const type = types[data.type]\n    return type.fromJSON(type, data)\n}\n\n\nexport var types: { [key: string]: typeof SaveableObject } = {}\n\nexport function addType(type: typeof SaveableObject, id: string) {\n    types[id] = type\n    type.id = id\n}\n", "import { SaveableObject, addType } from './saveableType'\n\nexport abstract class Cargo extends SaveableObject { }\n\nexport abstract class UsefulCargo extends Cargo { }\n\nexport class Rocket extends UsefulCargo { }\naddType(Rocket, 'Rocket')\n\nexport class Fuel extends UsefulCargo { }\naddType(Fuel, 'Fuel')\n\nabstract class ResourceCargo extends Cargo { }\n\n", "import { Cargo } from \"./cargo\"\nimport { SaveableObject, addType, fromJSON } from \"./saveableType\"\nimport { Ship } from \"./ship\"\n\nexport abstract class Component extends SaveableObject {\n    cellName? = ''\n    // ship: Ship\n    onEnter(div: HTMLDivElement) { }\n}\n\nexport abstract class UselessComponent extends Component { }\n\nexport class Airlock extends UselessComponent { }\naddType(Airlock, 'Airlock')\n\nexport class Passage extends UselessComponent { }\naddType(Passage, 'Passage')\n\nexport class Ballast extends UselessComponent {\n    opposite? = ''\n    onEnter(div: HTMLDivElement) {\n        div.getElementsByTagName('b')[0].innerText = this.opposite || ''\n    }\n}\naddType(Ballast, 'Ballast')\n\nexport class Debris extends UselessComponent {\n    original: string = ''\n    toJSON() {\n        return {\n            'type': this.typename,\n            'original': this.original\n        }\n    }\n    static fromJSON(type: typeof SaveableObject, data: { original: string }) {\n        let a = new Debris()\n        a.original = data.original\n        return a\n    }\n}\naddType(Debris, 'Debris')\n\n\n\nexport abstract class NormalComponent extends Component { }\n\nexport class CargoBay extends NormalComponent {\n    cargo: Array<Cargo> = []\n    toJSON() {\n        return {\n            'type': this.typename,\n            'cargo': this.cargo.map(x => x.toJSON())\n        };\n    }\n    static fromJSON(type: typeof SaveableObject, data: { cargo: Array<{ 'type': string }> }) {\n        let a = new CargoBay();\n        a.cargo = data.cargo.map((x: { type: string }) => fromJSON(x));\n        return a;\n    }\n    onEnter(div: HTMLDivElement) {\n        div.getElementsByTagName('ul')[0].innerHTML = this.cargo.map(x => `<li>${x.typename}</li>`).join('');\n        (div.getElementsByClassName('CargoBay_Empty')[0] as HTMLDivElement).style.display = (this.cargo.length == 0) ? '' : 'none';\n        (div.getElementsByClassName('CargoBay_NonEmpty')[0] as HTMLDivElement).style.display = (this.cargo.length == 0) ? 'none' : '';\n    }\n}\naddType(CargoBay, 'CargoBay');\n\n\nexport abstract class EngineComponent extends NormalComponent { }\n\nexport abstract class ComputerComponent extends NormalComponent { }\n", "export function randomInt(a: number, b: number): number {\n\tif (a > b) [a, b] = [b, a];\n\treturn Math.floor(Math.random() * (b - a + 1)) + a;\n}\n\nexport function randomFrom<T>(a: T[]): T {\n\treturn a[Math.floor(Math.random() * a.length)];\n}\n\nexport function shuffle<T>(array: T[]): T[] {\n\treturn array.map((a: any) => ({ sort: Math.random(), value: a }))\n\t\t.sort((a: { sort: number; }, b: { sort: number; }) => a.sort - b.sort)\n\t\t.map((a: { value: any; }) => a.value)\n}\n\nexport function seq(a: number): number[] {\n\treturn [...Array(a).keys()]\n\t//=> [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\n}\n\nexport function sleep(ms: number) {\n\treturn new Promise(resolve => setTimeout(resolve, ms));\n}", "import { Cargo, UsefulCargo } from \"./cargo\"\nimport { Ballast, CargoBay, Component, NormalComponent } from \"./components\"\nimport { fromJSON, types } from \"./saveableType\"\nimport { randomFrom, randomInt } from \"./utils\"\n\nexport interface xywh {\n    'x': number,\n    'y': number,\n    'w': number,\n    'h': number\n}\n\nexport class Ship {\n    isAlien: boolean = false\n    rows: Array<Array<Component>> = []\n    offsets: Array<number> = []\n\n    toJSON() {\n        return {\n            'isAlien': this.isAlien,\n            'offsets': this.offsets,\n            'rows': this.rows.map(row => row.map(component => component.toJSON()))\n        }\n    }\n\n    static fromJSON(data: { isAlien: boolean; offsets: number[]; rows: { type: string }[][] }) {\n        const ship = new Ship()\n        ship.isAlien = data.isAlien\n        ship.offsets = data.offsets\n        ship.rows = data.rows.map(row => row.map((x: { type: string }) => fromJSON(x) as Component))\n        return ship;\n    }\n\n    // functions used in drawing\n    get gridSize() {\n        if (this.isAlien) {\n            // TODO\n            return {\n                'x0': 0,\n                'x1': 0,\n                'y0': 0,\n                'y1': 0,\n                'w': 0,\n                'h': 0\n            }\n        } else {\n            let max_pos = 0\n            let max_neg = 0\n            for (let i = 0; i < this.rows.length; i++) {\n                max_pos = Math.max(max_pos, this.rows[i].length - this.offsets[i])\n                max_neg = Math.max(max_neg, this.offsets[i])\n            }\n            return {\n                'x0': 0,\n                'x1': this.rows.length - 1,\n                'y0': max_pos,\n                'y1': max_neg,\n                'w': this.rows.length,\n                'h': max_pos + max_neg + 1\n            }\n        }\n    }\n    rowToXY(row: number, i: number) {\n        if (this.isAlien) {\n            // TODO\n            return {\n                'x': 0,\n                'y': 0\n            }\n        } else {\n            if (i >= this.offsets[row]) {\n                return {\n                    'x': row,\n                    'y': 1 + (i - this.offsets[row])\n                }\n            } else {\n                return {\n                    'x': row,\n                    'y': (i - this.offsets[row])\n                }\n            }\n        }\n    }\n    get passage(): xywh {\n        if (this.isAlien) {\n            // TODO\n            return {\n                'x': 0,\n                'y': 0,\n                'w': 0,\n                'h': 0\n            }\n        } else {\n            return {\n                'x': 0,\n                'y': 0,\n                'w': this.rows.length,\n                'h': 1\n            }\n        }\n    }\n    oppositeComponent(a: Component) {\n        for (let row = 0; row <= this.rows.length; row++) {\n            let i = this.rows[row].indexOf(a)\n            if (i >= 0) {\n                return this.rows[this.rows.length - 1 - row][i]\n            }\n        }\n    }\n\n    static randomShip(size: number) {\n        const rowCount = 4\n        const componentTypes = Object.values(types).filter(x => (x.prototype instanceof NormalComponent)) as Array<typeof Component>\n        const cargoTypes = Object.values(types).filter(x => (x.prototype instanceof UsefulCargo)) as Array<typeof Cargo>\n        const ship = new Ship()\n        ship.rows = [[], [], [], []]\n        ship.offsets = [0, 0, 0, 0]\n        for (let i = 0; i < size; i++) {\n            let row = randomInt(0, rowCount - 1)\n            let componentType = randomFrom(componentTypes) as unknown as new () => Component\n            let component = new componentType()\n            if (component instanceof CargoBay) {\n                let cargos = randomInt(0, 4)\n                for (let j = 0; j < cargos; j++) {\n                    let cargoType = randomFrom(cargoTypes) as unknown as new () => Cargo\n                    component.cargo.push(new cargoType())\n                }\n            }\n            ship.rows[row].push(component)\n        }\n        for (let i = 0; i < ship.rows.length; i++) {\n            ship.offsets[i] = randomInt(0, ship.rows[i].length)\n        }\n        ship.balanceBallast()\n        return ship\n    }\n\n    balanceBallast() {\n        if (this.isAlien) {\n            //...\n        } else {\n            const max = this.rows.length - 1\n            // balance offsets\n            for (var i = 0; i <= max; i++) {\n                while (this.offsets[i] < this.offsets[max - i]) {\n                    this.rows[i].unshift(new Ballast())\n                    this.offsets[i]++\n                }\n            }\n            // add ballast to balance \n            for (var i = 0; i <= max; i++) {\n                while (this.rows[i].length < this.rows[max - i].length) {\n                    this.rows[i].push(new Ballast())\n                }\n            }\n            // remove extra ballast from head\n            for (var i = 0; i <= max; i++) {\n                while (this.rows[i][0] instanceof Ballast\n                    && this.rows[max - i][0] instanceof Ballast) {\n                    this.rows[i].shift()\n                    this.rows[max - i].shift()\n                    this.offsets[i]--\n                    this.offsets[max - i]++\n                }\n            }\n            // remove extra ballast from tail\n            for (var i = 0; i <= max; i++) {\n                while (this.rows[i].at(-1) instanceof Ballast\n                    && this.rows[max - i].at(-1) instanceof Ballast) {\n                    this.rows[i].pop()\n                    this.rows[max - i].pop()\n                }\n            }\n            // TODO: remove empty rows?\n            // record what's opposite to ballast\n            for (var i = 0; i <= max; i++) {\n                for (var j = 0; j <= this.rows[i].length; j++) {\n                    if (this.rows[i][j] instanceof Ballast) {\n                        (this.rows[i][j] as Ballast).opposite = this.rows[max - i][j].typename\n                    }\n                }\n            }\n        }\n    }\n    get topAirlock() {\n        // returns x-coordinate \n        // NOTE: putTwoShips assumes that airlock location is always counted from left side,\n        // i.e. return value=0 means \"leftmost column\"\n        if (this.isAlien) {\n            // TODO\n            return 0;\n        } else {\n            let maxLen = 0\n            for (let i = 0; i < this.rows.length; i++) {\n                maxLen = Math.max(maxLen, this.rows[i].length - this.offsets[i])\n            }\n            for (let i = 0; i < this.rows.length; i++) {\n                if (this.rows[i].length - this.offsets[i] == maxLen)\n                    return i\n            }\n            return 0 // should never happen\n        }\n    }\n    get bottomAirlock() {\n        if (this.isAlien) {\n            // TODO\n            return 0;\n        } else {\n            const maxOffset = Math.max(...this.offsets);\n            return this.offsets.lastIndexOf(maxOffset);\n        }\n    }\n}", "import { Airlock, Component, Passage } from \"./components\"\nimport { WalkMap } from \"./walker\";\nimport { Ship, xywh } from \"./ship\";\n\nexport const componentSize = 50\nexport const componentOffset = 5\n\nfunction drawComponent(ctx: CanvasRenderingContext2D, x: number, y: number, ship: Ship, component: Component, map?: WalkMap) {\n    if (ship.isAlien) {\n        ctx.rect(x * componentSize, y * componentSize + componentOffset, componentSize, componentSize - 2 * componentOffset);\n    } else {\n        ctx.rect(x * componentSize + componentOffset, y * componentSize, componentSize - 2 * componentOffset, componentSize);\n    }\n    ctx.strokeStyle = \"white\";\n    ctx.fillStyle = \"white\";\n    ctx.stroke();\n    ctx.textBaseline = 'top';\n    ctx.fillText(component.cellName || '', x * componentSize + componentOffset, y * componentSize)\n    ctx.fillText(component.typename[0], x * componentSize + componentOffset, y * componentSize + 16)\n    if (map) {\n        map.map[x][y].canBeHere = true\n        map.map[x][y].canGoX = ship.isAlien\n        map.map[x][y].canGoY = !ship.isAlien\n        map.map[x][y].ship = ship\n        map.map[x][y].component = component\n    }\n}\n\nfunction drawPassage(ctx: CanvasRenderingContext2D, x0: number, y0: number, ship: Ship, map?: WalkMap) {\n    const p = ship.passage\n    ctx.rect((x0 + p.x) * componentSize, (y0 + p.y) * componentSize, p.w * componentSize, p.h * componentSize);\n    ctx.strokeStyle = \"white\";\n    ctx.fillStyle = \"white\";\n    ctx.stroke();\n    ctx.textBaseline = 'top';\n    if (map) {\n        let component = new Passage();\n        for (let x = 0; x < p.w; x++)\n            for (let y = 0; y < p.h; y++) {\n                map.map[x + x0][y + y0].canBeHere = true\n                map.map[x + x0][y + y0].canGoX = true\n                map.map[x + x0][y + y0].canGoY = true\n                map.map[x + x0][y + y0].ship = ship\n                map.map[x + x0][y + y0].component = component\n            }\n    }\n}\n\nexport function drawAirlock(ctx: CanvasRenderingContext2D, x: number, y: number, map?: WalkMap) {\n    // NOTE: YOUR ship is always the lower one\n    // TODO: this is for normal-to-normal ship. How it will look with alien ships - TBD\n    ctx.strokeStyle = \"white\";\n    ctx.strokeStyle = \"white\";\n    ctx.fillStyle = \"white\";\n    ctx.beginPath();\n    ctx.moveTo(x * componentSize + componentOffset, y * componentSize);\n    ctx.lineTo(x * componentSize + componentOffset * 2, (y + 0.5) * componentSize);\n    ctx.lineTo(x * componentSize + componentOffset, (y + 1) * componentSize);\n    ctx.lineTo((x + 1) * componentSize - componentOffset, (y + 1) * componentSize);\n    ctx.lineTo((x + 1) * componentSize - componentOffset * 2, (y + 0.5) * componentSize);\n    ctx.lineTo((x + 1) * componentSize - componentOffset, y * componentSize);\n    ctx.closePath();\n    ctx.stroke();\n\n    if (map) {\n        map.map[x][y].canBeHere = true\n        map.map[x][y].canGoY = true\n        map.map[x][y].component = new Airlock()\n    }\n}\n\nexport function drawShip(ctx: CanvasRenderingContext2D, x0, y0, ship: Ship, map?: WalkMap) {\n    for (let row = 0; row < ship.rows.length; row++) {\n        for (let i = 0; i < ship.rows[row].length; i++) {\n            let component = ship.rows[row][i];\n            let xy = ship.rowToXY(row, i);\n            component.cellName = String.fromCharCode(65 + row) + xy.y;\n            drawComponent(ctx, x0 + xy.x, y0 - xy.y, ship, component, map);\n        }\n    }\n    drawPassage(ctx, x0, y0, ship, map);\n}\n\n", "import { Component } from \"./components\"\nimport { componentSize } from \"./draw\"\nimport { Ship } from \"./ship\"\n\nclass WalkPoint {\n    canBeHere = false\n    canGoX = false\n    canGoY = false\n    ship?: Ship\n    component?: Component\n}\n\nexport class WalkMap {\n    map: Array<Array<WalkPoint>> = []\n    constructor(maxX: number, maxY: number) {\n        for (let x = 0; x <= maxX; x++) {\n            this.map[x] = []\n            for (let y = 0; y <= maxY; y++) {\n                this.map[x][y] = new WalkPoint()\n            }\n        }\n    }\n}\n\nexport class Walker {\n    x: number\n    y: number\n    map: WalkMap\n    box: HTMLElement\n    canvas: HTMLCanvasElement\n    onEnter: (arg0?: Component) => void\n\n    goX(sign: number) {\n        if (!this.map.map[this.x][this.y].canGoX) return false;\n        if (!this.map.map[this.x + sign][this.y].canBeHere) return false;\n        this.x += sign\n        this.reposition()\n        this.onEnter(this.map.map[this.x][this.y].component)\n        return true\n    }\n    goY(sign: number) {\n        if (!this.map.map[this.x][this.y].canGoY) return false;\n        if (!this.map.map[this.x][this.y + sign].canBeHere) return false;\n        this.y += sign\n        this.reposition()\n        this.onEnter(this.map.map[this.x][this.y].component)\n        return true\n    }\n\n    goUp() { return this.goY(-1) }\n    goDn() { return this.goY(1) }\n    goLt() { return this.goX(-1) }\n    goRt() { return this.goX(1) }\n\n    jumpTo(x: number, y: number, x0?: number, y0?: number) {\n        if (x0 !== undefined && y0 !== undefined) {\n            this.x = x0;\n            this.y = y0;\n            this.reposition(true);\n            this.x = x;\n            this.y = y;\n            this.reposition();\n            this.onEnter(this.map.map[x][y].component);\n        } else {\n            this.x = x;\n            this.y = y;\n            this.reposition(true);\n            this.onEnter(this.map.map[x][y].component);\n        }\n    }\n\n    reposition(fast?: boolean) {\n        if (fast) {\n            this.canvas.classList.add('notransition');\n        }\n        let walkerOnCanvas_x = (this.x + 0.5) * componentSize\n        let walkerOnDiv_x = this.box.offsetWidth / 2\n        let canvasOffset_x = walkerOnDiv_x - walkerOnCanvas_x\n        this.canvas.style.left = canvasOffset_x + 'px'\n\n        let walkerOnCanvas_y = (this.y + 0.5) * componentSize\n        let walkerOnDiv_y = this.box.offsetHeight / 2\n        let canvasOffset_y = walkerOnDiv_y - walkerOnCanvas_y\n        this.canvas.style.top = canvasOffset_y + 'px'\n        if (fast) {\n            this.canvas.offsetHeight; // Trigger a reflow, flushing the CSS changes\n            this.canvas.classList.remove('notransition');\n        }\n    }\n}", "import { WalkMap, Walker } from \"./walker\";\nimport { Ship } from \"./ship\";\nimport { componentSize, drawShip, drawAirlock } from \"./draw\";\n\nexport class walkManager {\n    walker: Walker;\n    oneShipData: { x0: number; x1: number; y0: number; y1: number; w: number; h: number; };\n    twoShipsData: { ax0: number; ay0: number; airlock_x: number; airlock_y: number; bx0: number; by0: number; max_x: number; max_y: number; }\n    myShip: Ship;\n\n    putTwoShips(a: Ship, b: Ship) {\n        const a_sz = a.gridSize;\n        const b_sz = b.gridSize;\n        const a_lock = a.bottomAirlock;\n        const b_lock = b.topAirlock;\n        const airlock_x = Math.max(a_lock, b_lock) + 1;\n        const airlock_y = a_sz.h + 1;\n        const max_x = airlock_x + Math.max(a_sz.w - a_lock, b_sz.w - b_lock);\n        const max_y = airlock_y + b_sz.h + 1;\n        this.twoShipsData = {\n            'ax0': airlock_x - a_lock + a_sz.x0,\n            'ay0': a_sz.y0 + 1,\n            'airlock_x': airlock_x,\n            'airlock_y': airlock_y,\n            'bx0': airlock_x - b_lock + b_sz.x0,\n            'by0': airlock_y + b_sz.y0 + 1,\n            'max_x': max_x,\n            'max_y': max_y,\n        };\n    }\n\n    drawTwoShips(ctx: CanvasRenderingContext2D, a: Ship, b: Ship) {\n        this.putTwoShips(a, b);\n        const c = this.twoShipsData;\n        //console.log('putTwoShips says', a.gridSize, b.gridSize, a.bottomAirlock, b.topAirlock, c)\n        const m = new WalkMap(c.max_x, c.max_y);\n        this.walker.map = m;\n        ctx.canvas.width = componentSize * (c.max_x + 1);\n        ctx.canvas.height = componentSize * (c.max_y + 1);\n\n        drawShip(ctx, c.ax0, c.ay0, a, m);\n        drawShip(ctx, c.bx0, c.by0, b, m);\n        drawAirlock(ctx, c.airlock_x, c.airlock_y, m);\n    }\n\n    drawMyShip(ctx: CanvasRenderingContext2D) {\n        const gs = this.oneShipData = this.myShip.gridSize;\n        const m = this.walker.map = new WalkMap(gs.w + 1, gs.h + 1);\n        ctx.canvas.width = componentSize * (gs.w + 2);\n        ctx.canvas.height = componentSize * (gs.h + 2);\n        drawShip(ctx, gs.x0 + 1, gs.y0 + 1, this.myShip, m);\n    }\n\n    detach(ctx: CanvasRenderingContext2D) {\n        // assuming my ship is lower ship and player stands in airlock\n        // player coordinates relative to ship\n        const player_x = this.walker.x - this.twoShipsData.bx0;\n        const player_y = this.walker.y - this.twoShipsData.by0 + 1;\n        this.drawMyShip(ctx);\n        this.walker.jumpTo(this.oneShipData.x0 + 1 + player_x, this.oneShipData.y0 + 1 + player_y,\n            this.oneShipData.x0 + 1 + player_x, this.oneShipData.y0 + player_y);\n    }\n\n    attach(ctx: CanvasRenderingContext2D, otherShip: Ship) {\n        // player coordinates relative to ship\n        const player_x = this.walker.x - 1 - this.oneShipData.x0;\n        const player_y = this.walker.y - 1 - this.oneShipData.y0;\n        this.drawTwoShips(ctx, otherShip, this.myShip);\n        this.walker.jumpTo(this.twoShipsData.bx0 + player_x, this.twoShipsData.by0 + player_y);\n    }\n}\n", "//import { } from \"./draw.js\";\nimport { Ship } from \"./ship.js\";\nimport { CargoBay, Component } from \"./components.js\";\nimport { fromJSON, types } from \"./saveableType.js\";\nimport { Rocket } from \"./cargo.js\";\nimport { componentSize, drawShip } from \"./draw.js\";\nimport { walkManager } from \"./walkManager.js\";\nimport { WalkMap, Walker } from \"./walker.js\";\n\nexport function gebi(id: string) {\n    const element = document.getElementById(id);\n    if (!element) throw ReferenceError(`element ${id} not found`);\n    return element;\n}\nexport function gibi(id: string) {\n    const element = gebi(id);\n    if (!(element instanceof HTMLInputElement)) throw ReferenceError(`element ${id} is not input`);\n    return element;\n}\n\nif (location.hostname == 'localhost' || location.hostname == '127.0.0.1') {\n    new EventSource('/esbuild').addEventListener('change', () => location.reload());\n}\n\n\n\nlet my_ship = Ship.randomShip(15);\nlet other_ship = Ship.randomShip(35);\n\n//var s = Ship.randomShip(1);\n//var m = new WalkMap(0, 0)\nvar w = new Walker()\nw.box = gebi('canvasBox')\nvar wm = new walkManager()\nwm.walker = w;\n\nvar c = gebi(\"myCanvas\") as HTMLCanvasElement;\nvar ctx = c.getContext(\"2d\") as CanvasRenderingContext2D;\n\nw.canvas = c\nw.onEnter = onEnter\n\n// function x_draw(s: Ship) {\n//     const gs = s.gridSize\n//     m = new WalkMap(gs.w + 1, gs.h + 1)\n//     c.width = componentSize * (gs.w + 2)\n//     c.height = componentSize * (gs.h + 2)\n//     drawShip(ctx, gs.x0 + 1, gs.y0 + 1, s, m)\n//     w.map = m\n//     w.x = gs.x0 + 1\n//     w.y = gs.y0 + 1\n//     w.reposition()\n//     w.onEnter(w.map.map[w.x][w.y].component)\n//     console.log(m)\n// }\n\nfunction x_rand1() {\n    let s = Ship.randomShip(35);\n    wm.drawMyShip(ctx);\n    const gs = s.gridSize\n    w.jumpTo(gs.x0 + 1, gs.y0 + 1)\n}\n\nfunction x_rand() {\n    wm.myShip = my_ship;\n    wm.drawMyShip(ctx);\n    w.jumpTo(wm.oneShipData.x0 + 1, wm.oneShipData.y0 + 1);\n    x_attach();\n    // wm.attach(ctx, Ship.randomShip(25));\n    // wm.drawTwoShips(ctx, other_ship, my_ship);\n    // w.jumpTo(wm.twoShipsData.bx0, wm.twoShipsData.by0);\n}\n\nfunction x_attach() {\n    wm.attach(ctx, Ship.randomShip(25));\n    setStatus('Docked to another ship');\n}\n\n// function x_save() {\n//     localStorage.space2d3_1_ship = JSON.stringify(s.toJSON())\n// }\n\n// function x_load() {\n//     s = Ship.fromJSON(JSON.parse(localStorage.space2d3_1_ship))\n//     x_draw(s)\n// }\n\nx_rand();\n// gebi('save').onclick = x_save;\n// gebi('load').onclick = x_load;\n// gebi('random').onclick = x_rand;\n\nwindow.onkeypress = (e) => {\n    switch (e.key) {\n        case 'w': w.goUp(); break;\n        case 'a': w.goLt(); break;\n        case 's': w.goDn(); break;\n        case 'd': w.goRt(); break;\n    }\n}\n\nfunction onEnter(c?: Component) {\n    if (!c) return;\n    gebi('currentComponent').innerHTML = `#${c.typename} {display:block}`\n    let myDiv = gebi(c.typename) as HTMLDivElement\n    if (c.cellName)\n        gebi('componentLegend').innerText = `${c.cellName}: ${c.typename}`\n    else\n        gebi('componentLegend').innerText = `${c.typename}`\n    c.onEnter(myDiv)\n}\n\nfunction setStatus(s: string) {\n    gebi('status').innerText = s;\n}\n\ngebi('Airlock_Detach').onclick = () => {\n    wm.detach(ctx);\n    setStatus('Docking to next ship in 5...');\n    setTimeout(() => setStatus('Docking to next ship in 4...'), 1000);\n    setTimeout(() => setStatus('Docking to next ship in 3...'), 2000);\n    setTimeout(() => setStatus('Docking to next ship in 2...'), 3000);\n    setTimeout(() => setStatus('Docking to next ship in 1...'), 4000);\n    setTimeout(() => x_attach(), 5000);\n}"],
  "mappings": "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",
  "names": ["SaveableObject", "type", "data", "fromJSON", "types", "addType", "id", "Cargo", "SaveableObject", "UsefulCargo", "Rocket", "addType", "Fuel", "Component", "SaveableObject", "div", "UselessComponent", "Airlock", "addType", "Passage", "Ballast", "Debris", "_Debris", "type", "data", "a", "NormalComponent", "CargoBay", "_CargoBay", "x", "fromJSON", "randomInt", "a", "b", "randomFrom", "Ship", "_Ship", "row", "component", "data", "ship", "x", "fromJSON", "max_pos", "max_neg", "i", "a", "size", "componentTypes", "types", "NormalComponent", "cargoTypes", "UsefulCargo", "randomInt", "componentType", "randomFrom", "CargoBay", "cargos", "j", "cargoType", "max", "Ballast", "maxLen", "maxOffset", "componentSize", "componentOffset", "drawComponent", "ctx", "x", "y", "ship", "component", "map", "drawPassage", "x0", "y0", "p", "Passage", "drawAirlock", "Airlock", "drawShip", "row", "i", "xy", "WalkPoint", "WalkMap", "maxX", "maxY", "x", "y", "Walker", "sign", "x0", "y0", "fast", "walkerOnCanvas_x", "componentSize", "canvasOffset_x", "walkerOnCanvas_y", "canvasOffset_y", "walkManager", "a", "b", "a_sz", "b_sz", "a_lock", "b_lock", "airlock_x", "airlock_y", "max_x", "max_y", "ctx", "c", "m", "WalkMap", "componentSize", "drawShip", "drawAirlock", "gs", "player_x", "player_y", "otherShip", "gebi", "id", "element", "gibi", "my_ship", "Ship", "other_ship", "w", "Walker", "wm", "walkManager", "c", "ctx", "onEnter", "x_rand", "wm", "my_ship", "ctx", "w", "x_attach", "Ship", "setStatus", "e", "onEnter", "c", "gebi", "myDiv", "s"]
}
